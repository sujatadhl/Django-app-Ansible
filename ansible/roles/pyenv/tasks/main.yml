- name: Update apt package cache
  ansible.builtin.apt:
    update_cache: yes

- name: Install dependencies
  ansible.builtin.apt:
    name: "{{ item }}"
    state: present 
  loop:
    - libssl-dev 
    - zlib1g-dev 
    - libbz2-dev 
    - libreadline-dev 
    - libsqlite3-dev 
    - llvm 
    - libncursesw5-dev 
    - xz-utils 
    - tk-dev 
    - libxml2-dev 
    - libxmlsec1-dev 
    - libffi-dev 
    - liblzma-dev
    - virtualenv
     
- name: Remove existing Pyenv directory if present
  ansible.builtin.file:
    path: /root/.pyenv
    state: absent    

- name: Download pyenv installation script
  ansible.builtin.get_url:
    url: "https://pyenv.run"
    dest: "/root/pyenv_install.sh"
    mode: "055"

- name: Execute installation file 
  ansible.builtin.command: 
    cmd: /root/pyenv_install.sh

- name: Setup environment files 
  ansible.builtin.lineinfile:
    path: "{{ ansible_home }}/.bashrc"
    line: |
      export PYENV_ROOT="$HOME/.pyenv"
      export PATH="$PYENV_ROOT/bin:$PATH"
      eval "$(pyenv init --path)"
      eval "$(pyenv init -)" 
  
- name: Execute "$SHELL" command
  ansible.builtin.shell:
    cmd: "exec \"$SHELL\""

- name: install python version
  args:
    executable: /bin/bash
  ansible.builtin.command:
    cmd: "pyenv install {{ python_version }}"
    creates: "{{ ansible_env.HOME }}/.pyenv/versions:3.7"
  environment:
    PATH: "{{ ansible_env.HOME }}/.pyenv/bin:{{ ansible_env.PATH }}"  

- name: install the package, force upgrade
  pip:
    name: pip
    executable: pip3
    state: latest