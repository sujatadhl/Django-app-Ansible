# - name: Copy a project to private EC2
#   ansible.builtin.copy:
#     src: "/home/sujata/simple-django-project-main/"
#     dest: "{{ app_path }}"

# - name: Set local pyenv
#   args:
#     executable: /bin/bash
#     chdir: "{{ app_path }}"
#   ansible.builtin.command: 
#     cmd: "pyenv local {{ local_version }}"
#   environment:
#     PATH: "{{ ansible_env.HOME }}/.pyenv/bin:{{ ansible_env.PATH }}"     

# - name: Create virtual environment
#   command: python3 -m venv /home/ubuntu/myenv

# - name: Activate virtual environment
#   shell: source "{{ app_path }}"/env/bin/activate 
#   args:
#     executable: /bin/bash  
     
# - name: Upgrade pip 
#   shell:  pip install --upgrade pip   
 
# - name: Install specified requirements for project
#   ansible.builtin.pip:
#     requirements: /home/ubuntu/app/requirements.txt
#     virtualenv: /home/ubuntu/app/env

# - name: Configure Django settings
#   ansible.builtin.template:
#     src: templates/settings.py.j2
#     dest: /home/ubuntu/app/panorbit/settings.py


# - name: Apply database migrations
#   shell: |
#     source source "{{ app_path }}"/env/bin/activate  && \
#     cd {{ app_path }} && \
#     python manage.py makemigrations && \
#     python manage.py migrate
#   args:
#     executable: /bin/bash

# - name: Rebuild search index
#   shell: |
#     source source "{{ app_path }}"/env/bin/activate  && \
#     cd {{ app_path }} && \
#     python manage.py rebuild_index
#   args:
#     executable: /bin/bash

# - name: Run Django server
#   shell: |
#     source source "{{ app_path }}"/env/bin/activate  && \
#     cd {{ app_path }} && \
#     nohup python manage.py runserver 0:8001 &
#   args:
#     executable: /bin/bash